---
- name: Load secrets
  hosts: localhost
  
  tasks:

    - name: Install required applications
      become: yes
      package:
        name:
          - gnupg
          - expect
        state: present

    - name: Wait for gnupg key
      pause:
        prompt: Place private.key.gpg in /tmp and press any key
    
    - name: Import private key
      raw: 'gpg --output - --decrypt /tmp/private.key.gpg | gpg --import -'

    - name: Get Key ID
      pause:
        prompt: Enter identifier associated with key (email address?)
      register: gpg_email
      
    - name: Trust private key
      raw: 'expect -c "spawn gpg --edit-key {{ gpg_email.user_input }} trust quit; send \"5\ry\r\"; expect eof"'

    - name: Remove private.key.gpg
      file:
        path: /tmp/private.key.gpg
        state: absent
        
    - name: Setup SSH Authentication
      lineinfile:
        path: '$HOME/.gnupg/gpg-agent.conf'
        line: enable-ssh-support
        create: yes
        mode: '0600'

    - name: Query keygrip
      command: gpg2 -K --with-keygrip
      register: gpg_printout

    - name: Print keygrip
      debug:
        var: gpg_printout.stdout_lines
        
    - name: Get keygrip
      pause:
        prompt: Enter the keygrip for default SSH connections
      register: gpg_keygrip
      
    - name: Write Keygrip to sshcontrol
      lineinfile:
        path: '$HOME/.gnupg/sshcontrol'
        line: '{{ gpg_keygrip.user_input }}'
        create: yes
        mode: '0600'

    - name: Add secrets lines to .bashrc
      lineinfile:
        path: '$HOME/.bashrc'
        line: '{{ item }}'
        create: yes
      loop:
        - 'export GPG_TTY=$(tty)'
        - 'export SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)'
        - 'gpgconf --launch gpg-agent'

    - name: Add secrets lines to .profile (vscode default shell)
      lineinfile:
        path: '$HOME/.profile'
        line: '{{ item }}'
        create: yes
      loop:
        - 'export GPG_TTY=$(tty)'
        - 'export SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)'
        - 'gpgconf --launch gpg-agent'
