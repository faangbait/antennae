# Create Usenet Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: usenet
  labels:
    app.kubernetes.io/part-of: usenet
---
# Create Storage Endpoint
apiVersion: v1
kind: Endpoints
metadata:
  name: glusterfs-cluster
  namespace: usenet
  labels:
    storage.k8s.io/name: glusterfs-endpoint
    app.kubernetes.io/name: glusterfs-endpoint
    app.kubernetes.io/part-of: usenet
subsets:
  - addresses:
    - ip: 10.0.0.254
      nodeName: node1
    - ip: 10.0.0.253
      nodeName: node2
    - ip: 10.0.0.252
      nodeName: node3
    ports:
      - port: 42
---
# Create Storage Service
apiVersion: v1
kind: Service
metadata:
  name: glusterfs-cluster
  namespace: usenet
  labels:
    storage.k8s.io/name: glusterfs-service
    app.kubernetes.io/name: glusterfs-service
    app.kubernetes.io/part-of: usenet
spec:
  ports:
  - port: 42
---
# Create SABNZBD Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sabnzbd-web
  namespace: usenet
  labels:
    app.kubernetes.io/name: sabnzbd-deployment
    app.kubernetes.io/part-of: usenet
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: sabnzbd-web
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sabnzbd-web
        app.kubernetes.io/part-of: usenet
    spec:
      containers:
      - name: sabnzbd-web
        image: lscr.io/linuxserver/sabnzbd
        volumeMounts:
        - mountPath: /srv/complete
          name: bulk-complete
          subPath: "nzb-complete"
        - mountPath: /srv/incomplete
          name: bulk-incomplete
          subPath: "nzb-incomplete"
        - mountPath: /srv/watch # TODO: Consider changing to configMap
          name: cfg-nzbwatch
          subPath: "nzb-watch"
        - mountPath: /config
          name: cfg-sabnzbd
          subPath: "cfg-sabnzbd"
        resources:
          requests:
            memory: 512Mi
            cpu: "4"
          limits:
            memory: 8Gi
            cpu: "6"
      volumes:
        - name: bulk-complete
          glusterfs:
            endpoints: glusterfs-cluster
            path: glass_bulk
            readOnly: false
        - name: bulk-incomplete
          glusterfs:
            endpoints: glusterfs-cluster
            path: glass_bulk
            readOnly: false
        - name: cfg-nzbwatch
          glusterfs:
            endpoints: glusterfs-cluster
            path: glass_cfg
            readOnly: false
        - name: cfg-sabnzbd
          glusterfs:
            endpoints: glusterfs-cluster
            path: glass_cfg
            readOnly: false
---
# Create SABNZBD Service
apiVersion: v1
kind: Service
metadata:
  name: sabnzbd-service
  namespace: usenet
  labels:
    app.kubernetes.io/name: sabnzbd-service
    app.kubernetes.io/part-of: usenet
spec:
  selector:
    app.kubernetes.io/name: sabnzbd-web
  ports:
    - port: 8080
      name: sabnzbd-service
---
# Create SABNZBD Auth Middleware
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: htpasswd-auth
  namespace: usenet
  labels:
    app.kubernetes.io/name: htpasswd-auth
    app.kubernetes.io/part-of: usenet
spec:
  basicAuth:
    secret: htpasswd-auth-secret
---
# Create SABNZBD Auth Secret
# htpasswd -nb user password | openssl base64
apiVersion: v1
kind: Secret
metadata:
  name: htpasswd-auth-secret
  namespace: usenet
  labels:
    app.kubernetes.io/name: htpasswd-auth-secret
    app.kubernetes.io/part-of: usenet
data:
  users: |2
    c3M6JGFwcjEkYW1BemRYMUgkRXMwOVEubUV2akRON2dOT0ZlajgwLgoK
---
# Create SABNZBD IngressRoute
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: sabnzbd-ingress
  namespace: usenet
  labels:
    app.kubernetes.io/name: sabnzbd-ingress
    app.kubernetes.io/part-of: usenet
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`fetch.news.madeof.glass`)
      kind: Rule
      middlewares:
      - name: htpasswd-auth
        namespace: usenet
      services:
        - name: sabnzbd-service
          port: 8080
  tls:
    certResolver: letsencrypt
