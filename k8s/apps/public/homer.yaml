---
# Create Homer config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: homer-configmap
  namespace: public
  labels:
    app.kubernetes.io/name: homer-configmap
    app.kubernetes.io/part-of: homer
  annotations:
    a8r.io/description: "Creates homer config file."
    a8r.io/owner: "@faangbait"
    a8r.io/repository: "https://github.com/faangbait/antennae"
data:
  config: |
    title: "Glass Apps"
    subtitle: "Dashboard"
    logo: "static/glass-logo-128.png"

    header: true
    footer: ""
    columns: 4
    connectivityCheck: true
    
    proxy:
      useCredentials: true
    
    defaults:
      layout: columns
      colorTheme: dark
    
    theme: default

    links:
      - name: "Repo"
        icon: "fab fa-github"
        url: "https://github.com/faangbait/antennae"
        target: "_blank"
    
    services:
      - name: "Software"
        icon: "fas fa-code-branch"
        items:
          - name: "Awesome App"
            icon: "fab fa-jenkins"
            subtitle: "It's coming"
            tag: "software"
            url: "https://google.com"
            target: "_blank"

---
# Create Homer Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: homer
  namespace: public
  labels:
    app.kubernetes.io/name: homer
    app.kubernetes.io/part-of: homer
    app.kubernetes.io/release: nightly
  annotations:
    a8r.io/description: "Service dashboard / user-friendly frontend"
    a8r.io/owner: "@bastienwirtz"
    a8r.io/repository: "https://github.com/bastienwirtz/homer"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: homer-web
  template:
    metadata:
      labels:
        app.kubernetes.io/name: homer-web
        app.kubernetes.io/part-of: homer
    spec:
      containers:
      - name: homer-web
        image: docker.io/b4bz/homer
        env:
          - name: INIT_ASSETS
            value: "0"
        volumeMounts:
        - mountPath: /www/static
          name: cfg-homer
          subPath: "cfg/homer"
        - mountPath: /www/assets
          name: homer-configmap
        resources:
          requests:
            memory: 512Mi
            cpu: "2"
          limits:
            memory: 1Gi
            cpu: "2"
      volumes:
        - name: cfg-homer
          glusterfs:
            endpoints: glusterfs-cluster
            path: glass_cfg
            readOnly: false
        - name: homer-configmap
          configMap:
            name: homer-configmap
            items:
            - key: config
              path: config.yml
---
# Create homer Service
apiVersion: v1
kind: Service
metadata:
  name: homer-service
  namespace: public
  labels:
    app.kubernetes.io/name: homer-service
    app.kubernetes.io/part-of: homer
spec:
  selector:
    app.kubernetes.io/name: homer-web
  ports:
    - port: 8080
      name: homer-http
---
# Create homer IngressRoute
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: homer-ingress
  namespace: public
  labels:
    app.kubernetes.io/name: homer-ingress
    app.kubernetes.io/part-of: homer
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`dashboard.public.madeof.glass`)
      kind: Rule
      middlewares:
      - name: secure-auth
        namespace: public
      services:
        - name: homer-service
          port: homer-http
  tls:
    certResolver: letsencrypt
